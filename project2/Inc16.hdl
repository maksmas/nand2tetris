CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
   	And(a=in[0], b=true, out=next0);
   	Xor(a=in[0], b=true, out=out[0]);

   	And(a=in[1], b=next0, out=next1);
   	Xor(a=in[1], b=next0, out=out[1]);

   	And(a=in[2], b=next1, out=next2);
   	Xor(a=in[2], b=next1, out=out[2]);

   	And(a=in[3], b=next2, out=next3);
   	Xor(a=in[3], b=next2, out=out[3]);

   	And(a=in[4], b=next3, out=next4);
   	Xor(a=in[4], b=next3, out=out[4]);

   	And(a=in[5], b=next4, out=next5);
   	Xor(a=in[5], b=next4, out=out[5]);

   	And(a=in[6], b=next5, out=next6);
   	Xor(a=in[6], b=next5, out=out[6]);

   	And(a=in[7], b=next6, out=next7);
   	Xor(a=in[7], b=next6, out=out[7]);

   	And(a=in[8], b=next7, out=next8);
   	Xor(a=in[8], b=next7, out=out[8]);

   	And(a=in[9], b=next8, out=next9);
   	Xor(a=in[9], b=next8, out=out[9]);

   	And(a=in[10], b=next9, out=next10);
   	Xor(a=in[10], b=next9, out=out[10]);

   	And(a=in[11], b=next10, out=next11);
   	Xor(a=in[11], b=next10, out=out[11]);

   	And(a=in[12], b=next11, out=next12);
   	Xor(a=in[12], b=next11, out=out[12]);

   	And(a=in[13], b=next12, out=next13);
   	Xor(a=in[13], b=next12, out=out[13]);

   	And(a=in[14], b=next13, out=next14);
   	Xor(a=in[14], b=next13, out=out[14]);

   	Xor(a=in[15], b=next14, out=out[15]);
}